<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>


<div class="zhengwen">
<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_10.htm">上一页</a>
<a class="pagelink" href="paper_12.htm">下一页</a>
<a class="pagelink" href="paper_12.htm">尾页</a>
页码：11/12页
]
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">644</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>[15]O’Leary P， Maloberti F.</span><span class='green'>A direct-digital synthesizer with improved spectral performance[J].</span><span class='green'>IEEE Transactions on Communications， 1991， 39(7):</span><span class='green'>1046-1048.</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">645</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>致谢</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">646</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>附录A外文资料调研阅读报告或书面翻译</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">647</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>FPAG实现的1 GHz频率合成器</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">648</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>摘要</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">649</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/944/944.htm' target='right' class='orange' >本文介绍了一种使用FPGA实现的高速直接数字频率合成器（DDFS）的架构与设计。</a><span class='green'>该架构使用的角度旋转算法基于一种新型乘法器，使的正弦和余弦输出的幅度不会失真。</span><span class='green'>这种算法利用DSP在FPGA上效果很好。</span><span class='green'>最终的电路运行在赛灵思Virtex-7上，在时钟为1 GHz时功耗仅为54.9 mW，和使用ASIC实现的性能相当。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">650</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>1引言</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">651</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/949/949.htm' target='right' class='orange' >直接数字频率合成器(DDFS)提出以来，它就已经被用于数字通信系统中。</a><span class='green'>DDFS具有很多特性使得它由于传统的模拟PLL，这些特性包括相位连续，快速的频率切换，精细的频率分辨率，广泛的频率范围和频谱纯度。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">652</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>大多数DDFS都是基于Tierney，Rader和Gold在1971年首先提出的结构，如图5.1所示。</span><span class='green'>该结构由两个主要部分组成：</span><a href='../sentence_detail/953/953.htm' target='right' class='orange' >相位累加器和正弦/余弦映射函数（SCMF）。</a><a href='../sentence_detail/954/954.htm' target='right' class='red' >相位累加器由M位加法器和寄存器组成。</a><a href='../sentence_detail/955/955.htm' target='right' class='orange' >频率控制字（fcw）控制累加速率，从而控制输出频率。</a><a href='../sentence_detail/956/956.htm' target='right' class='orange' >相位累加器的M位输出在输出SCMF之前，会被截断为W位，以产生。</a><span class='green'>SCMF的过去由查找表组成，以将映射到输出X和Y，其中X =cos和Y =sin。</span><span class='green'>查找表大小与M呈指数比例关系。</span><a href='../sentence_detail/959/959.htm' target='right' class='orange' >因此，在过去40年中为减少查找表的大小已经进行了大量研究。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">653</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>FPGA在数字电路领域越来越受欢迎，尽管相对于ASIC设计而言，在相同的工艺下时钟速度和功耗开销都处于劣势。</span><span class='green'>由于成本高昂的NRE，公司和研究机构可能要在不同时代的工艺中设计ASIC，而FPGA在这一方面更具吸引力。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">654</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>不断升级的无线标准正将无线基站从固定实现推向可重构方式，而这种技术通常被称为软件定义无线电。</span><span class='green'>实现可重构的基站的一种方法是在设计中使用FPGA，使得无线标准的发展中，已部署的硬件可重新编程。</span><span class='green'>社会对无线数据的需求越来越大，导致对每个小区基站需要的更多无线容量，基站也要变得更小和更节能。</span><span class='green'>尽管在无线基站中使用DDFS作为数字无线电的一部分，但是很少有工作来优化FPGA中DDFS的实现和功能。</span><span class='green'>这样的数字无线电实施方案倾向于使用提供的供应商提供的 DDFS内核，内核中的 DDFS为了达到指定的频谱纯度，</span><a href='../sentence_detail/967/967.htm' target='right' class='orange' >其查找表结构中使用了功耗较大的 RAM和复杂的乘法器。</a><span class='green'>在本文的工作中，我们提出了FPGA中DDFS的最佳实现，主要设计目标是提高比特率和降低功耗。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">655</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图5.1 DDFS的基本结构</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">656</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2结构</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">657</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>A.</span><span class='green'>Coarse-fine DDFS</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">658</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>多年来，基于coarse-fine结构的DDFS已经出现了有多个改进版本。</span><span class='green'>在这种结构中，相位角被分解为coarse角度_M和fine角度_L。</span><span class='green'>这允许DDFS分两阶段实现，其中coarse阶段通常在查找表中实现，而fine阶段通过角度旋转，线性插值或多项式插值实现。</span><span class='green'>如下的旋转方式允许我们将DDFS分解成这两个阶段，其中(X_M，Y_M)是查找表的输出。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">659</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>Coarse-fine DDFS中的关键组件通常是fine的部分。</span><span class='green'>本文提出的DDFS的基础架构是基于不会引入幅度失真的角度旋转算法。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">660</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>B. 角度旋转算法</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">661</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>Madisetti使用CORDIC概念来提出了一个角度旋转算法，当该点围绕单位圆旋转时，该角度旋转算法不会使(X，Y)旋转后的向量发生扭曲。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">662</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>参见(1)中的余弦函数，可被分解为多个子旋转如公式(2)。</span><span class='green'>式中K = cos2cos3...</span><span class='green'>cosN+ 1是因式分解结果的比例因子，r_k{-1，1}。</span><span class='green'>其中r通过设置初始相位_F和对的b个二进制位重新编码得到。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">663</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>对于足够大的k，tan 2^(-k)2^(-k)是可近似的，对于有限信号字长(SWL），它们是完全相等的。</span><span class='green'>Madisetti还表明，当条件k(SWL 1)/ 2满足时，多次旋转可以合并成一次旋转。</span><span class='green'>我们将分解为_M和_L，并满足合并条件，使得_L的MSB位于2^-（M + 1）处。</span><span class='green'>最终，次旋转可以重新组合成以下单次旋转，公式如下：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">664</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>K表示缩放比例，初始相位为_F，(X_M，Y_M)是coarse阶段的输出。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">665</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>C. 两阶段重新编码</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">666</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/991/991.htm' target='right' class='orange' >(4)中的求和项表示带有二进制数字r_k的二进制数。</a><a href='../sentence_detail/992/992.htm' target='right' class='orange' >我们可以通过用b_k表示r_k的值，将r_k重新编码成二进制补码二进制数t_k{0，1}的位。</a><span class='green'>得到公式(5)。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">667</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>使用公式(5)和(6)和K，对公式(4)改写得到(7)。</span><span class='green'>这些操作使得fine阶段旋转只剩下一次乘法操作。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">668</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>D.</span><span class='green'>Coarse阶段</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">669</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>本DDFS中的coarse阶段由查找表实现。</span><span class='green'>归一化角度必须转换为弧度才能正常工作。</span><span class='green'>为了不额外使用专用电路进行/ 4乘法，需要使用查找表乘法器[5]。</span><span class='green'>这个/ 4项的需要在查找表中存储两个额外的值。</span><span class='green'>这是因为X的值根据（7）计算为X = X_M-t*Y_M，其中值t是fine截断_L的函数，其也需要被转换为弧度。</span><span class='green'>如（8）所示，我们必须将t的/ 4定为Y和Y_R。</span><span class='green'>的M个MSB组成coarse角_M。</span><span class='green'>查找表中的值由以下等式给出：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">670</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>3电路实现</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">671</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>A整体结构</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">672</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>设计的DDFS框图如图2所示。</span><a href='../sentence_detail/1009/1009.htm' target='right' class='orange' >包括32位频率控制字fcw，用于控制32位相位累加器。</a><span class='green'>然后相位累加器的输出被截断为20位。</span><span class='green'>截断相位表示间隔[0，2]内的一个角度。</span><span class='green'>由于正弦和余弦函数具有四分之一波对称性，所以删除的上两个MSB以将角映射成[0，/ 2）。</span><span class='green'>另外，由于从/ 4到/ 2的余弦（或正弦）的值与从零到/ 4的正弦（或余弦）的镜像值相同，所以我们移除另一个MSB并有根据条件对称至单位圆的第一个八分圆内的镜像。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">673</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>18位的归一化角度’[0，/ 2）用于控制数据通路。</span><span class='green'>的最高有效位控制/ 4镜像。</span><span class='green'>’的后7位生成_M，用于寻址包含coarse阶段的128字ROM。</span><span class='green'>’（表示为L）的最低有效十位在fine阶段控制旋转。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">674</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>通过在输出阶段中，单位圆的第一个八分圆的通过条件控制，将fine阶段的输出映射回其适当的八分圆。</span><span class='green'>DDFS的结果输出是两个16位二进制补码X =cos和Y =sin。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">675</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图5.2推荐DDFS结构框图</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">676</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>B 相位累加器</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">677</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>相位累加器的结构如图5.2所示。</span><span class='green'>频率控制字fcw用于调整DDFS的调谐频率f0。</span><a href='../sentence_detail/1024/1024.htm' target='right' class='orange' >数学上f_0 = fcw / 2 ^ M * F_clk，其中F_clk是系统的时钟频率，M是相位累加器中的位数。</a><a href='../sentence_detail/1025/1025.htm' target='right' class='orange' >频率分辨率由F_clk / 2 ^ M给出，定义为输出频率随fcw的变化。</a><span class='green'>对于本设计Fclk = 1 GHz和M = 32，产生0.23 Hz的频率分辨率。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">678</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/1027/1027.htm' target='right' class='orange' >在每个时钟周期，相位累加器的输出归一化角度= fcw / 2 ^ M * n[0，2]。</a><span class='green'>相位累加器的输出被截断为20位。</span><span class='green'>这个选择是为了配合与SCMF杂散的中spurs大小。</span>
</p>
</div>


<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_10.htm">上一页</a>
<a class="pagelink" href="paper_12.htm">下一页</a>
<a class="pagelink" href="paper_12.htm">尾页</a>
页码：11/12页
]
</div>

<br>
<div style="margin-left:8px">

<div style="text-align:center;background-color:#CA122C;margin-top:30px;overflow:hidden;">
<a href="http://www.paperpass.com/publish/index?from=ppreport_banner" target="_blank" style="display:block;"><img height="180" src="http://file.paperpass.com/images/fabiao.jpg"></a>
</div>

</div>
</div>


<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2017 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
